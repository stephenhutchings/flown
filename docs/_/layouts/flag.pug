extends /_/layouts/default

include /_/mixins/color

block body
  section.pb3(class=[
    flag.size.output > 10000 ? "large" : ""
  ])
    .head
      h1= flag.name
      span.emoji= flag.emoji

    if !flag.isValid
      .invalid.pb3
        :md
          Warning: This flag does not yet meet the criteria for this project, and will be redrawn. See the [list of incomplete flags](/todo).

        ul.mbs1
          for key in flag.errors
            li
              != "&times; "
              = errorCodes[key]

    .fx.pb2.gap
      each type in ["recolored"]
        a.flag(href=`/assets/img/flags/${type}/${flag.slug}.svg` data-type=type)
          img(
            width=600
            src=`/assets/img/flags/${type}/${flag.slug}.svg`
          )

    .info
      if flag.a2
        code.code.nano= flag.a2

      if flag.a3
        code.code.nano= flag.a3

      dl
        dt Size
        dd
          if flag.size.output > 1024
            = (flag.size.output / 1024).toFixed(1)
            span.mt kB
          else
            = flag.size.output
            span.mt B

          if flag.size.source > flag.size.output
            span(title="Size reduction compared to source SVG").mt
              |  (#{(100 - flag.size.compression).toFixed(1)}% smaller)


        if flag.ratio
          dt Original ratio
          dd(title="Original ratio")
            = flag.ratio

        if flag.ratio
          dt Elements
          dd(title="Number of elements")
            = flag.elementCount

      a(href=flag.info target="_blank") Wikipedia

  if notes && notes[flag.slug]
    ul
      each note in notes[flag.slug]
        li= note

  section.pb3
    h2 Palette
    if flag.colors
      ul.fx.fxw.gap
        each i in flag.colors
          li
            +color(palette[i])

    p.pb2
      if sameColors.length > 0
        | This colour palette is also used by
        for other, i in sameColors
          = i === 0 ? " " : i === sameColors.length - 1 ? " and " : ", "
          a(href=`/flags/${other.slug}/`)
            img.flag.inline(
              src=`/assets/img/flags/recolored/${other.slug}.svg`
            )
            = other.name
        = "."
      else
        | This colour palette is unique to #{flag.name}.

      if similarColors.length > 0
        |  It is similar to
        for other, i in similarColors
          = i === 0 ? " " : i === similarColors.length - 1 ? " and " : ", "
          a(href=`/flags/${other.slug}/`)
            img.flag.inline(
              src=`/assets/img/flags/recolored/${other.slug}.svg`
            )
            = other.name
        = "."

  section.pb3
    h2 Difference

    p Compare the difference between the updated flag and source artwork. White areas show where the two flags are similar, and black shows where the flags differ. The difference score depends on the method used to resize the flag, and whether the alignment is in the centre or on the hoist side.

    form.fx.fxw.gap.pb2(
      data-component="image-diff"
      data-image-a=`/assets/img/flags/source/${flag.slug}.svg`
      data-image-b=`/assets/img/flags/recolored/${flag.slug}.svg`
    )
      canvas.flag(width="600" height="360")

      .details.fx.fxc.gap
        .status
          strong Difference score&ensp;
          span.status-count Loadingâ€¦
        if flag.ratio !== "5:3"
          .option-group.mbs3
            .option-name.mbe1
              strong Resize
            .option-list.fx.gap
              label
                input(type="radio" name="resize" value="stretch" checked)
                | &ensp;Stretch
              label
                input(type="radio" name="resize" value="cover")
                | &ensp;Cover
              label
                input(type="radio" name="resize" value="contain")
                | &ensp;Contain
              label
                input(type="radio" name="resize" value="balance")
                | &ensp;Balance

          .option-group.mbs1
            .option-name.mbe1
              strong Align
            .option-list.fx.gap
              label
                input(type="radio" name="align" value="center" checked)
                | &ensp;Centre
              label
                input(type="radio" name="align" value="hoist")
                | &ensp;Hoist
        else
          p Because the source flag uses the same ratio, resizing and alignment options are not applicable.
  section.pb3
    h2 SVG Code
    pre
      code(style="white-space: pre-wrap; overflow-wrap: break-word;")
        != filters.highlight(content.toString(), "svg")

  section.pb3
    h2 Waterfall

    .fx.fxw.gap.pb2.jcsb
      for width in [320, 160, 120, 80, 60, 40, 25, 20]
        a(href=`/assets/img/flags/recolored/${flag.slug}.svg`)
          img.flag(
            width=width
            src=`/assets/img/flags/recolored/${flag.slug}.svg`
          )

block append head
  style.
    .flag[data-type]::before {
      position: absolute;
      top: 0;
      left: 0;
      background: #fff;
      color: #023;
      padding: 2px 3px;
      font-size: 0.8rem;
      transition: opacity 300ms;
    }

    [data-type="source"]::before {
      content: "Source (Wikipedia)";
    }

    [data-type="recolored"]::before {
      content: "Redrawn";
    }

    .flag[data-type]:hover::before {
      opacity: 0;
    }

    img.inline {
      height: 0.9em;
      width: 1.5em;
      display: inline-block;
      vertical-align: middle;
      margin: 0 0.2em;
    }

    dl {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    dd {
      margin-right: 0.5rem;
    }

    h2 {
      margin-bottom: 1rem;
    }

    canvas {
      max-inline-size: 37.5rem;
         }

    p {
      max-inline-size: 50rem;
      line-height: 1.5;
    }

    section + section {
      border-block-start-width: 1px;
    }

    .details {
      flex: 1 0 0;
      max-width: 25rem;
    }